#include "OracleDao.h"
exec sql include sqlca; 
exec sql include oraca; 
exec oracle option (oraca=yes);
exec oracle option (release_cursor=yes);  

//exec sql create sequence log_seq increment by 1 start with 0;
//exec sql create sequence log_seq;

exec sql begin declare section; 

char userpasswd[30]; 

struct DBLog
{
	char logname[32];
	char logip[32]; 
	int logintime; 
	int logouttime; 
	int durations; 
} g_dbLog;

exec sql end declare section; 

// 建立与 Oracle数据库 的连接
OracleDao::OracleDao(std::string const& user, std::string const& passwd)
{
	strcpy(userpasswd, user.c_str());
	strcat(userpasswd, "/");
	strcat(userpasswd, passwd.c_str());
	
	exec sql connect:userpasswd; 
	if(sqlca.sqlcode)
	{
		cout << "connect db error" << endl;
	}
	else
	{
		cout << "connect success" << endl; 
	}
}

// 释放与数据库的连接
OracleDao::~OracleDao()
{
	exec sql commit release; 
}

// 把数据插入 Oracle 数据库
void OracleDao::insert(MLogRec const& log)
{
	strcpy(g_dbLog.logname, log.logname);
	strcpy(g_dbLog.logip, log.logip);
	g_dbLog.logintime = log.logintime; 
	g_dbLog.logouttime = log.logouttime; 
	g_dbLog.durations = log.durations; 

	// debug
/*	cout << g_dbLog.logname << "\t" << g_dbLog.logip << "\t" 
		<< g_dbLog.logintime << "\t" << g_dbLog.logouttime << "\t" << g_dbLog.durations << endl; 
	
*/	

	exec sql insert into logSys values(log_seq.Nextval, :g_dbLog.logname, :g_dbLog.logip, to_date('19700101080000','yyyymmddhh24miss')+(:g_dbLog.logintime/(3600*24)), to_date('19700101080000','yyyymmddhh24miss')+(:g_dbLog.logouttime/(3600*24)),  :g_dbLog.durations); 
	if(sqlca.sqlcode == 0)
	{
		exec sql commit; 
	}
	else
	{
		exec sql rollback; 
		cout << "bad insert:\t" << sqlca.sqlerrm.sqlerrml << endl;
		cout << sqlca.sqlerrm.sqlerrmc << endl;  
		cout << g_dbLog.logname << "\t" << g_dbLog.logip << "\t" 
		<< g_dbLog.logintime << "\t" << g_dbLog.logouttime << "\t" << g_dbLog.durations << endl; 
	}




}
